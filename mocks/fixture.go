// Code generated by mockery v1.0.0. DO NOT EDIT.

// DO NOT EDIT MANUALLY. If you make changes to anything in interfaces.go, run make generate-mocks.

package mocks

import mock "github.com/stretchr/testify/mock"

// Fixture is an autogenerated mock type for the Fixture type
type Fixture struct {
	mock.Mock
}

// HasState provides a mock function with given fields: _a0
func (_m *Fixture) HasState(_a0 string) bool {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Start provides a mock function with given fields:
func (_m *Fixture) Start() {
	_m.Called()
}

// State provides a mock function with given fields: _a0
func (_m *Fixture) State(_a0 string) interface{} {
	ret := _m.Called(_a0)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(string) interface{}); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// Stop provides a mock function with given fields:
func (_m *Fixture) Stop() {
	_m.Called()
}
