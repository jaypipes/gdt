// Code generated by mockery v1.0.0. DO NOT EDIT.

// DO NOT EDIT MANUALLY. If you make changes to anything in interfaces.go, run make generate-mocks.

package mocks

import gdt "github.com/jaypipes/gdt"
import mock "github.com/stretchr/testify/mock"

// FixtureRegistry is an autogenerated mock type for the FixtureRegistry type
type FixtureRegistry struct {
	mock.Mock
}

// Get provides a mock function with given fields: _a0
func (_m *FixtureRegistry) Get(_a0 string) gdt.Fixture {
	ret := _m.Called(_a0)

	var r0 gdt.Fixture
	if rf, ok := ret.Get(0).(func(string) gdt.Fixture); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gdt.Fixture)
		}
	}

	return r0
}

// List provides a mock function with given fields:
func (_m *FixtureRegistry) List() []gdt.Fixture {
	ret := _m.Called()

	var r0 []gdt.Fixture
	if rf, ok := ret.Get(0).(func() []gdt.Fixture); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]gdt.Fixture)
		}
	}

	return r0
}

// Register provides a mock function with given fields: _a0, _a1
func (_m *FixtureRegistry) Register(_a0 string, _a1 gdt.Fixture) {
	_m.Called(_a0, _a1)
}
